version: "3"
volumes:
  db-data:
networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
services:
  # postgres:
  #   image: library/postgres:15
  #   container_name: postgres
  #   restart: on-failure
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: "postgres"
  #     POSTGRES_DB: postgres
  #   volumes:
  #     - db-data:/var/lib/postgresql/data
  #     - ./postgres/:/docker-entrypoint-initdb.d/
  #   ports:
  #     - "5432:5432"

  users-service:
    build:
      context: src/users
      dockerfile: Dockerfile
    image: drstarland/testus-users:1.0
    container_name: testus-users
    environment:
      PORT: "8040"
    ports:
      - "8040:8040"

  notes-service:
    build:
      context: src/notes
      dockerfile: Dockerfile
    image: drstarland/testus-notes:1.0
    container_name: testus-notes
    environment:
      PORT: "8050"
    ports:
      - "8050:8050"
    depends_on:
      - users-service

  tasks-service:
    build:
      context: src/tasks
      dockerfile: Dockerfile
    image: drstarland/testus-tasks:1.0
    container_name: testus-tasks
    environment:
      PORT: "8060"
    ports:
      - "8060:8060"
    # depends_on:
    #   - users-service


  gateway-service:
    build:
      context: src/gateway
      dockerfile: Dockerfile
    image: drstarland/testus-gateway:1.0
    container_name: testus-gateway
    environment:
      PORT: "8080"
    ports:
      - "8080:8080"
    depends_on:
      - users-service

      # - notes-service

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.3.2
  #   container_name: zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "22181:2181"

  # kafka:
  #   image: confluentinc/cp-kafka:7.3.2
  #   container_name: kafka-1
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #   depends_on:
  #     - zookeeper

# TODO добавить сервисы

  # note-service:
  #   build:
  #     context: src/notes
  #     dockerfile: Dockerfile
  #   image: drstarland/testus-notes:1.0
  #   container_name: testus-notes
  #   environment:
  #     PORT: "8070"
  #   ports:
  #     - "8070:8070"
  #   depends_on:
  #     - postgres

  # flight-service:
  #   build:
  #     context: src/flights
  #     dockerfile: Dockerfile
  #   image: drstarland/testus-flights:1.0
  #   container_name: testus-flights
  #   environment:
  #     PORT: "8060"
  #   ports:
  #     - "8060:8060"
  #   depends_on:
  #     - postgres

  # bonus-service:
  #   build:
  #     context: src/bonus
  #     dockerfile: Dockerfile
  #   image: drstarland/testus-bonus:1.0
  #   container_name: testus-bonus
  #   environment:
  #     PORT: "8050"
  #   ports:
  #     - "8050:8050"

  # gateway-service:
  #   build:
  #     context: src/gateway
  #     dockerfile: Dockerfile
  #   image: drstarland/testus-gateway:1.0
  #   container_name: testus-gateway
  #   environment:
  #     PORT: "8080"
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - flight-service
  #     - ticket-service
  #     - bonus-service


